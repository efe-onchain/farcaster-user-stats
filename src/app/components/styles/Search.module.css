.search form {
    display: flex; /* This bit sets up the horizontal layout */
    flex-direction: row;
    padding: 2px;
    margin-bottom: 48px;
    border: 1px solid #2F1D5C; /* And hide the input's outline, so the form looks like the outline */
    background-color: #321C6C;
    border-radius: 50px;
}
  
.search form input {
    flex-grow: 2; /* Tell the input to use all the available space */
    border: 1px solid #321C6C; /* And hide the input's outline, so the form looks like the outline */
    background-color: #321C6C;
    color: white;
    font-size: 16px;
}
  
.search form input:focus {   /* remove the input focus blue box, it will be in the wrong place. */
    outline: none;
}
  
.search form:focus-within { /* Add the focus effect to the form so it contains the button */
    display: relative;
}
  
.search form button {
    border: 1px solid #672DFF; /* Just a little styling to make it pretty */
    background: #672DFF;
    padding: 6px 14px;
    margin-left: 8px;
    border-radius: 4px;
    color: white;
    transition: 0.125s ease;
    font-size: 16px;
    border-radius: 50px;
    margin: 2px;
}

.search form button:hover {
    opacity: 0.65;
    cursor: pointer;
}

.search a {
    color: #FFF;
    opacity: 0.5;
    text-align: center;
    font-size: 12px;
    letter-spacing: 0.8px;
    display: block;
    margin-top: -32px;
    margin-bottom: 24px;
}

.search input {
    padding: 10px 12px 10px 20px;
    border-radius: 50px;
}

.search button:disabled,
.search button[disabled] {
    background: #b19cd1;
    color: #cdc2e4;
    border: 1px solid #b19cd1;
    cursor: default !important;
}


/* <div className={style.results}>
        {isLoading ? (
          <p>Loading...</p>
        ) : searchResults.length === 0 && username ? (
          <p>No results found for '{username}'</p>
        ) : (
          searchResults.map((user) => (
            <div key={user.fid} className={style.resultItem}>
              <div>
                <strong>{user.display_name}</strong>
                <p>@{user.username}</p>
                <small>Followers: {user.follower_count}</small>
              </div>
            </div>
          ))
        )}
      </div> */

.results {
    border-radius: 8px;
    display: block;
}

.results .resultItem {
    background: rgb(111 66 230);
    /* border-bottom: 2px solid #ffffff78; */
    margin-bottom: 8px;
    padding: 8px;
    cursor: pointer;
    border-radius: 50px;
    z-index: 999999;
}

.results .resultItem:hover {
    opacity: 0.65;
}

.results .resultItem p {
    font-size: 14px;
    text-align: left;
    color: white;
    width: 100%;
    margin: 0 auto;
    letter-spacing: 0.4px;
}

.results .resultItem svg {
    width: 24px;
    height: 24px;
    float: right;
    display: block;
    margin-top: -36px;
    margin-right: 10px;
}

.results .link-wrapper {
    margin: 0 auto;
    text-decoration: none;
    opacity: 1;
}

.results .resultItem .name {
    font-weight: 600;
}

.results .resultItem .username {

}

.results .resultItem img {
    display: block;
    width: 48px;
    height: 48px;
    float: left;
    border-radius: 50px;
    margin-right: 4px;
}



@media only screen and (max-width: 600px) {
    /* .search {
        width: calc(100% - 56px) !important;
    } */
}